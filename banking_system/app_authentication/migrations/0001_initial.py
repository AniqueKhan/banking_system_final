# Generated by Django 3.2.18 on 2023-08-06 07:46

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('account_name', models.CharField(max_length=30, unique=True)),
                ('pan_number', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{3}P[A-Z][0-9]{4}K$', 'Account Number must be in the format ABCP1X1234K', 'invalid')])),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Phone number must be entered in the format: +999999999. Up to 15 digits allowed.', 'invalid')])),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('self_employed', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default=('yes', 'Yes'), max_length=3)),
                ('married', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default=('yes', 'Yes'), max_length=3)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default=('male', 'Male'), max_length=6)),
                ('dependents', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4')], default=(0, '0'))),
                ('education', models.CharField(choices=[('graduated', 'Graduate'), ('not_graduated', 'Not Graduate')], default=('graduated', 'Graduate'), max_length=13)),
                ('applicant_income', models.FloatField()),
                ('co_applicant_income', models.FloatField(blank=True, null=True)),
                ('property_area', models.CharField(choices=[('urban', 'Urban'), ('semi-urban', 'Semiurban'), ('rural', 'Rural')], default=('urban', 'Urban'), max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
